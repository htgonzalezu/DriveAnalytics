# -*- coding: utf-8 -*-
"""bodegadedatos-PI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XxocpmXi07kJxRWzZexGEuyZtxuyxz7u
"""

#!pip install supabase
import os
from dotenv import load_dotenv
import json
from supabase import create_client, Client

# cargar variables de entorno desde .env y exponerlas como variables usadas más abajo
load_dotenv(".env")

SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
SUPABASE_AUTH_EMAIL = os.getenv("SUPABASE_AUTH_EMAIL")
SUPABASE_AUTH_PASSWORD = os.getenv("SUPABASE_AUTH_PASSWORD")

if not SUPABASE_URL or not SUPABASE_KEY:
    raise RuntimeError("Por favor, defina SUPABASE_URL y SUPABASE_KEY en el archivo .env")

# variables que el resto del archivo puede usar en lugar de los strings hardcodeados
url = SUPABASE_URL
key = SUPABASE_KEY
AUTH_EMAIL = SUPABASE_AUTH_EMAIL
AUTH_PASSWORD = SUPABASE_AUTH_PASSWORD

# INTEGRANTES: SANTIAGO HERNANDEZ, LAURA PEREZ, HEIDY GONZALEZ
supabase: Client = create_client(url, key)

response = supabase.auth.sign_in_with_password(
    {
        "email": AUTH_EMAIL,
        "password": AUTH_PASSWORD,
    }
)
'''
# INSERCION DE DATOS
response = (
    supabase.table("dim_vehiculo_clean")
    .insert([
        {"marca": "Audi", "modelo": "RS3", "year": "2020", "tipo": "combustion", "cilindraje": 3000, "estado": "activo", "precio": 290000},
        {"marca": "BMW", "modelo": "M3", "year": "2021", "tipo": "combustion", "cilindraje": 4000, "estado": "activo", "precio": 400000},
        {"marca": "Tesla", "modelo": "Model 3", "year": "2022", "tipo": "eléctrico", "cilindraje": 5000, "estado": "activo", "precio": 450000},
        {"marca": "Toyota", "modelo": "Corolla", "year": "2019", "tipo": "híbrido", "cilindraje": 1600, "estado": "inactivo", "precio": 28000},
    ])
    .execute()
)
print(response)
'''

# ACTUALIZAR DATOS EXISTENTES
response = (
    supabase.table("dim_vehiculo")
    .update({"precio": "1"})
    .eq("id_vehiculo", 29)
    .execute()
)

print(f"Vehiculo Acualizado: {response}")

# ELIMINAR DATOS EXISTENTES
response = (
    supabase.table("dim_vehiculo")
    .delete()
    .eq("id_vehiculo", 30)
    .execute()
)

# CONSULTAR TODOS LOS DATOS DE LA TABLA VEHICULO
response = (
    supabase.table("dim_vehiculo")
    .select("*", count="exact")
    #.eq("marca", "merecedes benz")
    .execute()
)

print(response) # vista sin formato JSON
print(json.dumps(response.data, indent=4) + "Count: " + str(response.count)) # vista con formato JSON

response = (
    supabase.table("dim_vehiculo")
    .select("*", count="exact")
    .eq("marca", "Mercedes Benz")
    .execute()
)

print(response)
print(json.dumps(response.data, indent=4) + "Count: " + str(response.count))